name: Agent
run-name: Agent(${{ inputs.AGENT_AZURE_MODEL_NAME }}) ${{ inputs.WOPEE_PROJECT_URL }} ${{ inputs.WOPEE_USER_PROMPT }}

on:
  repository_dispatch:
    types: [agent, crawl]
  workflow_dispatch:
    inputs:
      WOPEE_PROJECT_URL:
        description: "WOPEE_PROJECT_URL"
        required: true
        default: "https://dronjo.wopee.io"
      WOPEE_USER_PROMPT:
        description: "WOPEE_USER_PROMPT"
        default: "Proceed with E2E purchase flow."
        required: true
      AGENT_AZURE_MODEL_NAME:
        description: "AGENT_AZURE_MODEL_NAME"
        required: true
        type: choice
        default: "gpt-4o-mini"
        options:
          - "gpt-4o"
          - "gpt-4o-mini"
          - "o3-mini"
          - "Cohere-command-r-08-2024"
      AGENT_AZURE_API_VERSION:
        description: "AGENT_AZURE_API_VERSION"
        required: true
        type: choice
        default: "2024-10-21"
        options:
          - "2024-10-21"
          - "2024-12-01-preview"
          - "2024-05-01-preview"
      TOOLS_AZURE_MODEL_NAME:
        description: "TOOLS_AZURE_MODEL_NAME"
        required: true
        type: choice
        default: "gpt-4o-mini"
        options:
          - "gpt-4o"
          - "gpt-4o-mini"
          - "o3-mini"
          - "Cohere-command-r-08-2024"
      TOOLS_AZURE_API_VERSION:
        description: "TOOLS_AZURE_API_VERSION"
        required: true
        type: choice
        default: "2024-10-21"
        options:
          - "2024-10-21"
          - "2024-12-01-preview"
          - "2024-05-01-preview"

jobs:
  test:
    runs-on: self-hosted
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      WOPEE_API_KEY: ${{ secrets.WOPEE_API_KEY }}
      WOPEE_API_URL: ${{ vars.WOPEE_API_URL || 'https://api.wopee.io' }}
      WOPEE_PROJECT_UUID: ${{ vars.WOPEE_PROJECT_UUID }}
      WOPEE_PROJECT_URL: ${{ inputs.WOPEE_PROJECT_URL || vars.WOPEE_PROJECT_URL || 'https://dronjo.wopee.io' }}
      WOPEE_SCREENSHOT_VALIDATION_ENABLED: "true"
      WOPEE_BRANCH_NAME: master
      WOPEE_CI_BUILD_ID: build-123
      WOPEE_CUSTOM_TAGS: custom-tag
      WOPEE_ENABLE_SOFT_ASSERT: "true"
      WOPEE_PIXEL_TO_PIXEL_DIFF_TOLERANCE: "0.1"
      WOPEE_COLLECT_PAGE_CONTENT: "true"
      WOPEE_USER_PROMPT: ${{ inputs.WOPEE_USER_PROMPT || 'You are a senior QA engineer running an exploratory test. Use `assertVisualState` to get an explanation of the app under test and propose user flow with the highest business value. Then conduct the test.' }}
      # AGENT_AZURE_API_KEY: ${{ secrets.AGENT_AZURE_API_KEY || secrets.AZURE_API_KEY }}
      AGENT_AZURE_RESOURCE_NAME: ${{ vars.AGENT_AZURE_RESOURCE_NAME || 'wopee-ox' }}
      AGENT_AZURE_MODEL_NAME: ${{ inputs.AGENT_AZURE_MODEL_NAME || 'gpt-4o-mini' }}
      AGENT_AZURE_API_VERSION: ${{ inputs.AGENT_AZURE_API_VERSION || '2024-10-21' }}
      # TOOLS_AZURE_API_KEY: ${{ secrets.TOOLS_AZURE_API_KEY || secrets.AZURE_API_KEY }}
      TOOLS_AZURE_RESOURCE_NAME: ${{ vars.TOOLS_AZURE_RESOURCE_NAME || 'wopee-ox' }}
      TOOLS_AZURE_MODEL_NAME: ${{ inputs.TOOLS_AZURE_MODEL_NAME || 'gpt-4o-mini' }}
      TOOLS_AZURE_API_VERSION: ${{ inputs.TOOLS_AZURE_API_VERSION || '2024-10-21' }}
      # AZURE_API_KEY: ${{ secrets.AGENT_AZURE_API_KEY || secrets.AZURE_API_KEY }}
      AZURE_RESOURCE_NAME: ${{ vars.AGENT_AZURE_RESOURCE_NAME || 'wopee-ox' }}
      AZURE_MODEL_NAME: ${{ inputs.AGENT_AZURE_MODEL_NAME || 'gpt-4o-mini' }}
      AZURE_API_VERSION: ${{ inputs.AGENT_AZURE_API_VERSION || '2024-10-21' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          npm install --prefer-offline --no-audit
          npx playwright install ffmpeg

      - name: Create data folder
        run: mkdir -p data
      - name: Create app context
        if: github.event.client_payload.app_context
        run: echo "${{ github.event.client_payload.app_context }}" | base64 --decode > data/app_context.md
      - name: Create general user stories
        if: github.event.client_payload.general_user_stories
        run: echo "${{ github.event.client_payload.general_user_stories }}" | base64 --decode > data/general_user_stories.md
      - name: Create general user stories additional prompt
        if: github.event.client_payload.general_user_stories_additional_prompt
        run: echo "${{ github.event.client_payload.general_user_stories_additional_prompt }}" | base64 --decode > data/general_user_stories_additional_prompt.md
      - name: Create test cases
        if: github.event.client_payload.test_cases
        run: echo "${{ github.event.client_payload.test_cases }}" | base64 --decode > data/test_cases.json
      - name: Create test cases additional prompt
        if: github.event.client_payload.test_cases_additional_prompt
        run: echo "${{ github.event.client_payload.test_cases_additional_prompt }}" | base64 --decode > data/test_cases_additional_prompt.md
      - name: Create user stories
        if: github.event.client_payload.user_stories
        run: echo "${{ github.event.client_payload.user_stories }}" | base64 --decode > data/user_stories.json
      - name: Create test case
        if: github.event.client_payload.test_case
        run: |
          echo "${{ github.event.client_payload.test_case }}" | base64 --decode > data/test_case.json
          export WOPEE_USER_PROMPT="${{ github.event.client_payload.user_prompt }}"

      - name: Set suite name if provided
        if: github.event_name == 'repository_dispatch' && github.event.client_payload.suite_name != null
        run: |
          echo 'WOPEE_SUITE_NAME=${{ github.event.client_payload.suite_name }}' >> $GITHUB_ENV

      - name: Set WOPEE_TEST_USERNAME
        if: github.event.client_payload.suite_analysis_config != null && github.event.client_payload.suite_analysis_config.username != null
        run: export WOPEE_TEST_USERNAME="${{ github.event.client_payload.suite_analysis_config.username }}"

      - name: Set WOPEE_TEST_PASSWORD
        if: github.event.client_payload.suite_analysis_config != null && github.event.client_payload.suite_analysis_config.password != null
        run: export WOPEE_TEST_PASSWORD="${{ github.event.client_payload.suite_analysis_config.password }}"

      - run: wopee_agent

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            test-results
            playwright-report
          retention-days: 3
